{"ast":null,"code":"var _jsxFileName = \"/Users/brandon/Workspace/IGDB Game Website/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [games, setGames] = useState([{}]);\n  useEffect(() => {\n    fetch(\"/api/games/\").then(response => response.json()).then(data => {\n      setGames(data);\n    });\n  }, []);\n  const image_url = 'https://images.igdb.com/igdb/image/upload/t_cover_small/';\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Games\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), games.length > 0 ? games.map(game => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [game.id, \" \", game.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), game.cover !== undefined ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `${image_url + game.cover.image_id}.jpg`,\n        alt: game.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        href: \"../public/blank.png\",\n        alt: \"blank img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [parseFloat(game.rating).toFixed(2), \" | \", game.rating_count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), game.release_dates.platform, \" (\", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: game.release_dates.platform.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }, this), \")\"]\n    }, game.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"ommC5bZX3FupM0mevX2BbEL+8fw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","games","setGames","fetch","then","response","json","data","image_url","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","game","id","name","cover","undefined","src","image_id","alt","href","parseFloat","rating","toFixed","rating_count","release_dates","platform","_c","$RefreshReg$"],"sources":["/Users/brandon/Workspace/IGDB Game Website/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\n\nfunction App() {\n\n  const [games, setGames] = useState([{}])\n\n  useEffect(() => {\n    fetch(\"/api/games/\")\n      .then(response => response.json())\n      .then(data => {setGames(data)})\n    }, [])\n\n  const image_url = 'https://images.igdb.com/igdb/image/upload/t_cover_small/'\n\n  return (\n    <>\n      <h1>Games</h1>\n\n      {games.length > 0? (\n        games.map(game => \n          <div key={game.id}>\n            <h3>{game.id} {game.name}</h3>\n            {game.cover !== undefined? (\n              <img src={`${image_url + game.cover.image_id}.jpg`} alt={game.name}/>\n            ) : (\n              <img href='../public/blank.png' alt='blank img' />\n            )}\n            <p>{parseFloat(game.rating).toFixed(2)} | {game.rating_count}</p>\n            {game.release_dates.platform} (\n              <p>{game.release_dates.platform.name}</p>\n            )\n          </div>\n        )\n      ) : (\n        <p>Loading</p>\n      )}\n\n    </>\n  )\n}\n\nexport default App"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAExCD,SAAS,CAAC,MAAM;IACdU,KAAK,CAAC,aAAa,CAAC,CACjBC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MAACL,QAAQ,CAACK,IAAI,CAAC;IAAA,CAAC,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC;EAER,MAAMC,SAAS,GAAG,0DAA0D;EAE5E,oBACEZ,OAAA,CAAAE,SAAA;IAAAW,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEbZ,KAAK,CAACa,MAAM,GAAG,CAAC,GACfb,KAAK,CAACc,GAAG,CAACC,IAAI,iBACZpB,OAAA;MAAAa,QAAA,gBACEb,OAAA;QAAAa,QAAA,GAAKO,IAAI,CAACC,EAAE,EAAC,GAAC,EAACD,IAAI,CAACE,IAAI;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAC7BG,IAAI,CAACG,KAAK,KAAKC,SAAS,gBACvBxB,OAAA;QAAKyB,GAAG,EAAG,GAAEb,SAAS,GAAGQ,IAAI,CAACG,KAAK,CAACG,QAAS,MAAM;QAACC,GAAG,EAAEP,IAAI,CAACE;MAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,gBAErEjB,OAAA;QAAK4B,IAAI,EAAC,qBAAqB;QAACD,GAAG,EAAC;MAAW;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAClD,eACDjB,OAAA;QAAAa,QAAA,GAAIgB,UAAU,CAACT,IAAI,CAACU,MAAM,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,EAAC,KAAG,EAACX,IAAI,CAACY,YAAY;MAAA;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAChEG,IAAI,CAACa,aAAa,CAACC,QAAQ,EAAC,IAC3B,eAAAlC,OAAA;QAAAa,QAAA,EAAIO,IAAI,CAACa,aAAa,CAACC,QAAQ,CAACZ;MAAI;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,KAE7C;IAAA,GAXUG,IAAI,CAACC,EAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWZ,CACP,CAAC,gBAEDjB,OAAA;MAAAa,QAAA,EAAG;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACd;EAAA,eAED,CAAC;AAEP;AAACb,EAAA,CArCQD,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AAuCZ,eAAeA,GAAG;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}